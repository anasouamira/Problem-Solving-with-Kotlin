// ===============================================================
// Problem 49 | Custom Ceil Function without using built-in ceil()
// ===============================================================

import kotlin.math.ceil

// Function to get the fractional part of a floating-point number
fun getFractionPart(number: Float): Float {
    return number - number.toInt()
}

// Custom implementation of ceil() function
// Ceil of a number = smallest integer greater than or equal to the number
fun myCeil(number: Float): Int {
    val intPart = number.toInt()
    // If positive and has a fraction, add 1 to the integer part
    return if (number > 0 && getFractionPart(number) > 0)
        intPart + 1
    else
        intPart
}

// Function to read a floating-point number from the user
fun readNumber(): Float {
    print("Please enter a number: ")
    return readLine()!!.toFloat()
}

fun main() {
    // Read input from the user
    val number = readNumber()

    // Display custom ceil result
    println("My Ceil Result  : ${myCeil(number)}")

    // Display built-in Kotlin ceil result
    println("Kotlin ceil Result: ${ceil(number)}")

    // ==============================================================
    // Kotlin Professional Version (concise & idiomatic)
    // ==============================================================

    println("\n================ Kotlin Professional Version ================\n")

    print("Enter a number: ")
    val input = readLine()!!.toFloat()

    // One-line custom ceil using when expression
    val customCeil = when {
        input > 0 && input != input.toInt().toFloat() -> input.toInt() + 1
        else -> input.toInt()
    }

    println("My Ceil Result  : $customCeil")
    println("Kotlin ceil Result: ${ceil(input)}")
}
